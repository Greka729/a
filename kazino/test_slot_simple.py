#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def test_slot_machine():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã"""
    print("üé∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
        from games.slot_machine import SlotMachine, Symbol
        print("‚úÖ –ò–º–ø–æ—Ä—Ç SlotMachine —É—Å–ø–µ—à–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —Å–ª–æ—Ç-–º–∞—à–∏–Ω—É
        slot_machine = SlotMachine()
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ SlotMachine —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–∏–º–≤–æ–ª–∞
        symbol = slot_machine.get_random_symbol()
        print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª: {symbol.value}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤
        result = slot_machine.spin_reels()
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ä–∞—â–µ–Ω–∏—è: {[s.value for s in result]}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—ã–∏–≥—Ä—ã—à–∞
        is_win, payout = slot_machine.check_win(result, 10)
        print(f"‚úÖ –í—ã–∏–≥—Ä—ã—à: {is_win}, –°—É–º–º–∞: {payout}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–∏–≥—Ä—ã—à–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
        win_symbols = [Symbol.CHERRY, Symbol.CHERRY, Symbol.CHERRY]
        is_win, payout = slot_machine.check_win(win_symbols, 10)
        print(f"‚úÖ –¢–µ—Å—Ç –≤—ã–∏–≥—Ä—ã—à–Ω–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏: {is_win}, –°—É–º–º–∞: {payout}")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_win_checker():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∏–≥—Ä—ã—à–µ–π"""
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∏–≥—Ä—ã—à–µ–π...")
    
    try:
        from games.slot_win_checker import SlotWinChecker
        print("‚úÖ –ò–º–ø–æ—Ä—Ç SlotWinChecker —É—Å–ø–µ—à–µ–Ω")
        
        win_checker = SlotWinChecker()
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ SlotWinChecker —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤—ã–∏–≥—Ä—ã—à–µ–π
        from games.slot_machine import Symbol
        reels = [
            [Symbol.CHERRY, Symbol.LEMON, Symbol.ORANGE],
            [Symbol.CHERRY, Symbol.LEMON, Symbol.ORANGE],
            [Symbol.CHERRY, Symbol.LEMON, Symbol.ORANGE]
        ]
        
        wins = win_checker.check_all_wins(reels, 10)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤—ã–∏–≥—Ä—ã—à–µ–π: {len(wins)}")
        
        total_payout = win_checker.get_total_payout(wins)
        print(f"‚úÖ –û–±—â–∏–π –≤—ã–∏–≥—Ä—ã—à: {total_payout}")
        
        print("üéâ –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∏–≥—Ä—ã—à–µ–π –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_game_manager():
    """–¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä—ã"""
    print("\nüéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä—ã...")
    
    try:
        from games.slot_game_manager import SlotGameManager
        from balance import BalanceManager
        print("‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω")
        
        balance_manager = BalanceManager()
        game_manager = SlotGameManager(balance_manager)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ SlotGameManager —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å—Ç–∞–≤–∫–∏
        result = game_manager.set_bet(25)
        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞–≤–∫–∏: {result}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats = game_manager.get_stats()
        print(f"‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: –±–∞–ª–∞–Ω—Å = {stats['balance']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
        bets = game_manager.get_available_bets()
        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞–≤–∫–∏: {bets}")
        
        print("üéâ –¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä—ã –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    print("üé∞ –ü—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã")
    print("=" * 50)
    
    success = True
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success &= test_slot_machine()
    success &= test_win_checker()
    success &= test_game_manager()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("–°–ª–æ—Ç-–º–∞—à–∏–Ω–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    
    sys.exit(0 if success else 1)
