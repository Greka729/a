#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–ª–æ—Ç-–º–∞—à–∏–Ω—ã
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–µ–∑ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""

import sys
import os
import time
import random

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def print_header():
    """–ü–µ—á–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
    print("üé∞" + "=" * 60 + "üé∞")
    print("           –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–õ–û–¢-–ú–ê–®–ò–ù–´")
    print("üé∞" + "=" * 60 + "üé∞")
    print()

def print_symbols_info():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∞—Ö"""
    print("üìã –°–ò–ú–í–û–õ–´ –ò –í–´–ü–õ–ê–¢–´:")
    print("-" * 40)
    
    symbols_info = [
        ("üçí –í–∏—à–Ω—è", "25%", "x2", "x5"),
        ("üçã –õ–∏–º–æ–Ω", "20%", "x3", "x10"),
        ("üçä –ê–ø–µ–ª—å—Å–∏–Ω", "20%", "x3", "x10"),
        ("üçá –°–ª–∏–≤–∞", "15%", "x5", "x15"),
        ("üîî –ö–æ–ª–æ–∫–æ–ª", "10%", "x8", "x25"),
        ("üìä –ë–∞—Ä", "5%", "x15", "x50"),
        ("7Ô∏è‚É£ –°–µ–º–µ—Ä–∫–∞", "3%", "x25", "x100"),
        ("üíé –ë—Ä–∏–ª–ª–∏–∞–Ω—Ç", "2%", "x100", "x500")
    ]
    
    print(f"{'–°–∏–º–≤–æ–ª':<12} {'–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å':<12} {'2x':<8} {'3x':<8}")
    print("-" * 40)
    for symbol, prob, two, three in symbols_info:
        print(f"{symbol:<12} {prob:<12} {two:<8} {three:<8}")
    print()

def demo_single_spin():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ –≤—Ä–∞—â–µ–Ω–∏—è"""
    print("üé≤ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –í–†–ê–©–ï–ù–ò–Ø:")
    print("-" * 30)
    
    try:
        from games.slot_machine import SlotMachine
        
        slot_machine = SlotMachine()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä–∞—â–µ–Ω–∏—è
        print("–í—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤...", end="", flush=True)
        for i in range(3):
            time.sleep(0.5)
            print(".", end="", flush=True)
        print()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        result = slot_machine.spin_reels()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {' | '.join([s.value for s in result])}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
        bet = 10
        is_win, payout = slot_machine.check_win(result, bet)
        
        if is_win:
            print(f"üéâ –í–´–ò–ì–†–´–®! –í—ã–∏–≥—Ä—ã—à: ${payout} (—Å—Ç–∞–≤–∫–∞: ${bet})")
        else:
            print(f"üòî –ü—Ä–æ–∏–≥—Ä—ã—à. –°—Ç–∞–≤–∫–∞: ${bet}")
        
        print()
        return is_win, payout
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False, 0

def demo_multiple_spins():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –≤—Ä–∞—â–µ–Ω–∏–π"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ò (10 –≤—Ä–∞—â–µ–Ω–∏–π):")
    print("-" * 45)
    
    try:
        from games.slot_machine import SlotMachine
        
        slot_machine = SlotMachine()
        
        total_bet = 0
        total_payout = 0
        wins = 0
        
        for i in range(10):
            bet = 10
            total_bet += bet
            
            result = slot_machine.spin_reels()
            is_win, payout = slot_machine.check_win(result, bet)
            
            if is_win:
                wins += 1
                total_payout += payout
                status = f"üéâ –í–´–ò–ì–†–´–® ${payout}"
            else:
                status = "üòî –ü—Ä–æ–∏–≥—Ä—ã—à"
            
            print(f"–°–ø–∏–Ω {i+1:2d}: {' | '.join([s.value for s in result])} - {status}")
            time.sleep(0.3)
        
        print("-" * 45)
        print(f"–ò—Ç–æ–≥–æ —Å—Ç–∞–≤–æ–∫: ${total_bet}")
        print(f"–ò—Ç–æ–≥–æ –≤—ã–∏–≥—Ä—ã—à–µ–π: ${total_payout}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–∏–≥—Ä—ã—à–µ–π: {wins}/10")
        print(f"–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–µ–π: {wins*10}%")
        print(f"RTP (Return to Player): {(total_payout/total_bet*100):.1f}%")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def demo_win_checker():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–∏–≥—Ä—ã—à–µ–π"""
    print("üîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–†–û–í–ï–†–ö–ò –í–´–ò–ì–†–´–®–ï–ô:")
    print("-" * 40)
    
    try:
        from games.slot_win_checker import SlotWinChecker
        from games.slot_machine import Symbol
        
        win_checker = SlotWinChecker()
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        test_cases = [
            ([Symbol.CHERRY, Symbol.CHERRY, Symbol.CHERRY], "–¢—Ä–∏ –≤–∏—à–Ω–∏"),
            ([Symbol.SEVEN, Symbol.SEVEN, Symbol.SEVEN], "–¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏"),
            ([Symbol.DIAMOND, Symbol.DIAMOND, Symbol.DIAMOND], "–¢—Ä–∏ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–∞"),
            ([Symbol.CHERRY, Symbol.LEMON, Symbol.ORANGE], "–†–∞–∑–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã"),
            ([Symbol.SEVEN, Symbol.LEMON, Symbol.SEVEN], "–î–≤–µ —Å–µ–º–µ—Ä–∫–∏"),
        ]
        
        for symbols, description in test_cases:
            wins = win_checker.check_all_wins([symbols], 10)
            total_payout = win_checker.get_total_payout(wins)
            
            print(f"{description}: {' | '.join([s.value for s in symbols])}")
            print(f"  –í—ã–∏–≥—Ä—ã—à–µ–π: {len(wins)}, –û–±—â–∏–π –≤—ã–∏–≥—Ä—ã—à: ${total_payout}")
            
            for win in wins:
                print(f"    - {win_checker.get_win_description(win)}: ${win['payout']}")
            print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def demo_game_manager():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä—ã"""
    print("üéÆ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ï–ù–ï–î–ñ–ï–†–ê –ò–ì–†–´:")
    print("-" * 35)
    
    try:
        from games.slot_game_manager import SlotGameManager
        from balance import BalanceManager
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
        balance_manager = BalanceManager()
        balance_manager.deposit(1000)  # –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
        game_manager = SlotGameManager(balance_manager)
        
        print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${game_manager.get_balance()}")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–≤–∫—É
        game_manager.set_bet(25)
        print(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞–≤–∫–∞: ${game_manager.current_bet}")
        
        # –î–µ–ª–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–∏–Ω–æ–≤
        for i in range(5):
            if game_manager.can_spin():
                result, wins, payout = game_manager.spin()
                
                print(f"–°–ø–∏–Ω {i+1}: {' | '.join([s.value for s in result])}")
                if payout > 0:
                    print(f"  üéâ –í—ã–∏–≥—Ä—ã—à: ${payout}")
                else:
                    print(f"  üòî –ü—Ä–æ–∏–≥—Ä—ã—à")
                print(f"  –ë–∞–ª–∞–Ω—Å: ${game_manager.get_balance()}")
                print()
            else:
                print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∏–≥—Ä—ã")
                break
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = game_manager.get_stats()
        print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"  –í—Å–µ–≥–æ —Å–ø–∏–Ω–æ–≤: {stats['total_spins']}")
        print(f"  –í—ã–∏–≥—Ä—ã—à–µ–π: {stats['total_wins']}")
        print(f"  –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–µ–π: {stats['win_rate']}%")
        print(f"  –°–∞–º—ã–π –±–æ–ª—å—à–æ–π –≤—ã–∏–≥—Ä—ã—à: ${stats['biggest_win']}")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def interactive_demo():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è"""
    print("üéÆ –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø:")
    print("-" * 35)
    print("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è, 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞")
    print()
    
    try:
        from games.slot_machine import SlotMachine
        
        slot_machine = SlotMachine()
        balance = 100
        bet = 10
        
        print(f"–ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance}")
        print(f"–°—Ç–∞–≤–∫–∞: ${bet}")
        print()
        
        while balance >= bet:
            user_input = input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è (–∏–ª–∏ 'q' –¥–ª—è –≤—ã—Ö–æ–¥–∞): ").strip().lower()
            
            if user_input == 'q':
                break
            
            balance -= bet
            result = slot_machine.spin_reels()
            is_win, payout = slot_machine.check_win(result, bet)
            
            if is_win:
                balance += payout
                print(f"üéâ –í–´–ò–ì–†–´–®! {' | '.join([s.value for s in result])} - –í—ã–∏–≥—Ä—ã—à: ${payout}")
            else:
                print(f"üòî –ü—Ä–æ–∏–≥—Ä—ã—à: {' | '.join([s.value for s in result])}")
            
            print(f"–ë–∞–ª–∞–Ω—Å: ${balance}")
            print()
        
        print("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!")
        print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print_header()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∞—Ö
    print_symbols_info()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    demo_single_spin()
    demo_multiple_spins()
    demo_win_checker()
    demo_game_manager()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    print("üéÆ –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é? (y/n): ", end="")
    try:
        if input().strip().lower() in ['y', 'yes', '–¥–∞', '–¥']:
            interactive_demo()
    except KeyboardInterrupt:
        print("\n–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    
    print("üé∞" + "=" * 60 + "üé∞")
    print("           –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("üé∞" + "=" * 60 + "üé∞")
    print()
    print("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("python src/pygame_app.py")
    print()

if __name__ == "__main__":
    main()
